!function(){"use strict";var routeLib="/ng-math-factory/src";angular.module("ng-math-factory",["math.methods","math.general","math.adjust-curve","math.search-raiz"]).factory("$math",["$q","$methods","adjustCurve","general","searchRaiz",function($q,$methods,adjustCurve,general,searchRaiz){function resolve(method,input,routeDep,callback){for(var methods_factory=$methods,i=0;i<methods_factory.length;i++)if(method.name===methods_factory[i].name){if(void 0!==methods_factory[i].libs)for(var k=0;k<methods_factory[i].libs.length;k++){var oHead=document.getElementsByTagName("head")[0],oScript=document.createElement("script");oScript.type="text/javascript",oScript.charset="utf-8",oScript.src=routeDep+routeLib+methods_factory[i].libs[k],oHead.appendChild(oScript)}var res=eval(methods_factory[i].factory+'["'+method.sub+'"]("'+input+'")'),html=methods_factory[i].html;html.resolve=routeDep+routeLib+html.resolve,html.graphics=void 0===html.graphics?void 0:routeDep+routeLib+html.graphics,callback(res,html);break}}function getMethods(){return $methods}return{resolve:resolve,getMethods:getMethods}}])}(),function(){"use strict";angular.module("math.methods",[]).factory("$methods",function(){var e="/ng-math-factory/src";return[{name:"General",sub:[{name:"Operación basica",in:"formula",readme:e+"/general/readme/op_basic.html"}],html:{resolve:"/general/view_general.html"},factory:"general"},{name:"Ajuste de curvas",sub:[{name:"Mínimos cuadrados",in:"xy"}],html:{resolve:"/adjust_curve/view_adjust_curve.html",graphics:"/adjust_curve/view_graphics.html"},factory:"adjustCurve"},{name:"Búsqueda de raíces",sub:[{name:"Punto fijo",in:"formula",readme:e+"/search_raiz/readme/point_fixed.html"},{name:"Bisección",in:"formula",readme:e+"/search_raiz/readme/bisection.html"},{name:"Newton Raphson",in:"formula",readme:e+"/search_raiz/readme/newton.html"},{name:"Regla falsa",in:"formula",readme:e+"/search_raiz/readme/rule_false.html"}],html:{resolve:"/search_raiz/view_search_raiz.html"},factory:"searchRaiz"}]})}(),function(){"use strict";angular.module("math.adjust-curve",[]).factory("adjustCurve",function(){function e(e){for(var a,r,o,t,l={options:{tooltip:{style:{padding:10,fontWeight:"bold"}}},series:[{name:"Puntos",data:[1,2,3,4,5,6],type:"scatter",id:"series-0"},{name:"R",data:[3,1],type:"line",id:"series-1"}],title:{text:"Mínimos cuadrados"},useHighStocks:!1},s=e.length,n={solveTable:[{x:"X",y:"Y",a:"X * Y",b:"χ²",c:"a + b X",d:"Y - Ŷ"}],solveSum:[{symbol:"Σχ:",value:0},{symbol:"ΣY:",value:0},{symbol:"Σ(X * Y):",value:0},{symbol:"Σ(χ²):",value:0},{symbol:"Σ(Y - Ŷ):",value:0}],solveAB:[],solveR:""},u=0,i=0;i<s;i++)""===e[i].x&&(e[i].x=0),""===e[i].y&&(e[i].y=0),a=e[i].x*e[i].y,r=Math.pow(e[i].x,2),o=a+(r+e[i].x),t=e[i].y-o,u+=Math.pow(e[i].y,2),n.solveTable.push({x:e[i].x,y:e[i].y,a:a,b:r,c:o,d:t});for(i=1;i<n.solveTable.length;i++)n.solveSum[0].value+=n.solveTable[i].x,n.solveSum[1].value+=n.solveTable[i].y,n.solveSum[2].value+=n.solveTable[i].a,n.solveSum[3].value+=n.solveTable[i].b,n.solveSum[4].value+=n.solveTable[i].d;n.solveAB[1]=(s*n.solveSum[2].value-n.solveSum[0].value*n.solveSum[1].value)/(s*n.solveSum[3].value-Math.pow(n.solveSum[0].value,2)),n.solveAB[0]=(n.solveSum[1].value+n.solveAB[1]*n.solveSum[0].value)/s;var c=n.solveSum[2].value,m=n.solveSum[0].value,v=n.solveSum[1].value,h=n.solveSum[3].value,p=(h-Math.pow(m,2)/s)*(u-Math.pow(v,2)/s);n.solveR=(c-m*v/s)/Math.sqrt(p,2),n.solveR2=Math.pow(n.solveR,2),n.graphics=[];var f=[],d=[],x=[];for(i=1;i<n.solveTable.length;i++)f.push([n.solveTable[i].x,n.solveTable[i].y]),d.push(n.solveTable[i].y),x.push(n.solveTable[i].x);return l.series[0].data=f,l.series[1].data=[[0,Math.min(d)],[Math.max(x),Math.max(d)]],n.graphics=l,n}return{"Mínimos cuadrados":e}})}(),function(){"use strict";angular.module("math.general",[]).factory("general",function(){function op_basic(input){var solucion=eval(input);return solucion}function derivar(e){var a;try{a=deriveExpression(e)}catch(e){a="Expresiones invalidas."}return a}return{"Operación basica":op_basic,Derivar:derivar}})}(),function(){"use strict";angular.module("math.search-raiz",[]).factory("searchRaiz",function(){function point_fixed(e){e=parse_input(e),console.log(e);var a=0,r=0,o=0,t=e.x1;r=parseFloat(t);for(var l=0;l<e.iteracion;l++)a=r,r=replaceValues(e.funcion,t),o=100*Math.abs((r-a)/r),t=r;return console.log("xr: "+r+" error"+o),{xr:r,error:o}}function bisection(e){e=parse_input(e),console.log(replaceValues(e.funcion,e.x2)),console.log(replaceValues(e.funcion,e.x1));var a=replaceValues(e.funcion,e.x1),r=replaceValues(e.funcion,e.x2);if(a<=0&&r>=0||a>=0&&r<=0){for(var o,t,l,s=e.x1,n=0,u=0;u<e.iteracion;u++)n=s,s=(parseFloat(e.x1)+parseFloat(e.x2))/2,o=replaceValues(e.funcion,parseFloat(e.x1)),t=replaceValues(e.funcion,s),l=100*Math.abs((s-n)/s),o*t<=0?e.x2=s:e.x1=s;return{XR:s,error:l}}return{XR:"no valido",error:"100%"}}function newton(e){}function rule_false(e){e=parse_input(e);for(var a,r,o,t,l=e.x2,s=0,n=0;n<e.iteracion;n++)s=l,a=replaceValues(e.funcion,parseFloat(x1)),r=replaceValues(e.funcion,parseFloat(x2)),l=parseFloat(x2)-r*(parseFloat(x1)-parseFloat(x2))/(a-r),t=100*Math.abs((l-s)/l),o=replaceValues(e.funcion,l),a*o<0?x2=l:x1=l;return{XR:l,error:t}}function parse_input(e){var a=e.split(";");return{funcion:a[0],x1:parseInt(a[1]),x2:parseInt(a[2]),iteracion:parseInt(a[3])}}function replaceValues(funcion,x){return funcion=replaceOthers(funcion,"pow"),funcion=replaceOthers(funcion,"x",x),eval(funcion)}function replaceAll(e,a,r){return e.replace(new RegExp(a,"g"),r)}function replaceOthers(e,a,r){if(e=replaceAll(e," ",""),"pow"==a)for(;e.indexOf("^")!=-1;)e=e.replace("^","**");else if("x"==a)for(var o=e.indexOf("x");o!=-1;){var t=void 0!==e[o-1]&&isNumeric(e[o-1]),l=void 0!==e[o+1]&&isNumeric(e[o+1]);e=t&&l?e.replace("x","*"+r+"*"):t?e.replace("x","*"+r):l?e.replace("x",r+"*"):e.replace("x",r),o=e.indexOf("x")}return e}function isNumeric(e){return e-0==e&&(""+e).trim().length>0}return{"Bisección":bisection,"Punto fijo":point_fixed,"Newton Raphson":newton,"Regla falsa":rule_false}})}();